{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","DeploymentSite","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","aria-label","Header","homepage","title","About","role","resume","social","ProjectContainer","project","map","item","uniqid","marginBottom","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e304d7.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://mejialaguna.github.io/P-folio/',\n  title: 'JS/React',\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Jose L Mejia Laguna',\n  role: 'Full Stack-WebDeveloper',\n  description:\n    'computer programmers who is proficient in both front and back end coding. Their primary responsibilities include designing user interactions on websites, developing servers, and databases for website functionality, and coding for mobile platforms.',\n  resume:\n    'https://docs.google.com/document/d/1IQp0sbz_pEytnZKSWT1QhlGhAf2iYAZNf1WZundt3GY/edit?usp=sharing',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/jose-luis-mejia-laguna-961306164/',\n    github: 'https://github.com/mejialaguna?tab=repositories',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'lil-tweet',\n    description:\n      'A small version of tweeter where you can create messages , able to do CRUD operations just to show some Tech',\n    stack: [\n      'HTML',\n      'JavaScript',\n      'React',\n      'React-dom',\n      'Router',\n      'Redux',\n      'Material ui - \"MUI\"',\n      'Semantic-ui',\n      'Apollo-Client',\n      'Graphql && graphql-tag',\n      'express',\n      'jwt-decode',\n      'moment',\n      'apollo-server-express',\n      'bcryptjs',\n      'jsonwebtoken',\n      'mongoose',\n      'nodemon',\n    ],\n    DeploymentSite: 'Deployment site: Heroku',\n    sourceCode: 'https://github.com/mejialaguna/lil-tweet.git',\n    livePreview: 'https://lil-tweet.herokuapp.com/',\n  },\n  {\n    name: 'Dream-Home',\n    description:\n      'Real estate apps are mobile applications aimed at making the process of property transactions easy. These apps are designed in a way that makes it easy for buyers, sellers, realtors, landlords, and investors to find each other quickly and conveniently',\n    stack: [\n      'CSS',\n      'JavaScript',\n      'Node',\n      'express',\n      'ES6',\n      'Node',\n      'mySQL 2',\n      'Sequelize',\n      'Nodemon',\n      'dotenv',\n      'axios',\n      'Handlebars',\n      'bcrypt',\n      'connect-session-sequelize',\n      'Jest',\n    ],\n    DeploymentSite: 'Deployment site: Heroku',\n    sourceCode: 'https://github.com/mejialaguna/Dream-Home.git',\n    livePreview: 'https://sheltered-eyrie-12242.herokuapp.com/',\n  },\n  {\n    name: 'global-trade',\n    description:\n      'Global Trade is a Single Page E-commerce Web Application. It allows users to search for products based on categories, add product to the cart and process credit card payment.',\n    stack: [\n      'Html',\n      'CSS',\n      'JavaScript',\n      'React-bootstrap',\n      'React-Mui',\n      'express',\n      'Node',\n      'Npm',\n      'React',\n      'mongodb',\n      'graphQl',\n    ],\n    DeploymentSite: 'Deployment site: Heroku',\n    sourceCode: 'https://github.com/mejialaguna/global-trade.git',\n    livePreview: 'https://still-eyrie-57534.herokuapp.com/',\n  },\n  {\n    name: 'In-proccess',\n    description: 'E-commerce.',\n    stack: [\n      'Html',\n      'CSS',\n      'JavaScript',\n      'React-bootstrap',\n      'React-Mui',\n      'express',\n      'Node',\n      'Npm',\n      'React',\n      'mongodb',\n      'graphQl',\n      'Heroku',\n    ],\n    sourceCode: 'https://github.com/mejialaguna/react_webSite.git',\n  },\n]\n\nconst skills = [\n  // skills can be added or removed\n  // if there are no skills, Skills section won't show up\n  'HTML',\n  'CSS',\n  'JavaScript',\n  'React',\n  'Redux',\n  'React-bootstrap',\n  'Material UI',\n  'Mysql2',\n  'mongodb',\n  'graphQl',\n  'Heroku',\n  'Git',\n  'Jest',\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'mejialaguna@yahoo.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I am <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>A {role}.</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={resume}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        <a href={social.github} aria-label='github' className='link link--icon'>\n          <GitHubIcon />\n        </a>\n\n        <a\n          href={social.linkedin}\n          aria-label='linkedin'\n          className='link link--icon'\n        >\n          <LinkedInIcon />\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n        <br />\n      </ul>\n    )}\n    <p style={{marginBottom: 20}}>{project.DeploymentSite}</p>\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/mejialaguna/P-folio.git'\n      className='link footer__link'\n    >\n      JLML\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}